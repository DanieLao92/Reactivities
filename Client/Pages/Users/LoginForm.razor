@inject IJSRuntime js
@inject Agent agent
@inject NavigationManager NavManager

<EditForm class="ui form"
          Model="loginForm"
          OnValidSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <header class="ui header center text teal">Login to Reactivities</header>
    <InputText class="ui field"
               placeholder="Email"
               @bind-Value="loginForm.Email" />
    <ValidationMessage For="@(() => loginForm.Email)" />
    <InputText class="ui field"
               type="password"
               placeholder="Password"
               @bind-Value="loginForm.Password" />
    <ValidationMessage For="@(() => loginForm.Password)" />
    @if (!string.IsNullOrEmpty(error))
    {
        <div class="ui negative message">
            <i class="close icon"></i>
            <div class="header">
                @error
            </div>
        </div>
    }
    <button type="submit"
            class="ui button fluid teal">
        Login
    </button>
</EditForm>

@code {
    LoginUserForm loginForm = new LoginUserForm();
    string error;

    async Task HandleSubmit()
    {
        var response = await agent.Login(loginForm);
        if (response.IsSuccessStatusCode)
            NavManager.NavigateTo("activities", true);
        else
            error = response.ReasonPhrase;
    }
}