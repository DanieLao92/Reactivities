@inject NavigationManager NavManager
@inject RootStore Store
@inject IJSRuntime js

<div class="ui fixed top inverted menu">
    <div class="ui container">
        <NavLink Match="NavLinkMatch.All"
                 href=""
                 class="item">
            <img src="/assets/logo.png"
                 alt="logo"
                 style="margin-right:10px;" />
            Reactivities
        </NavLink>
        <NavLink href="activities"
                 class="item">
            Activities
        </NavLink>
        <div class="item">
            <button href="createActivity"
                    class="positive ui button"
                    @onclick="CreateActivity">
                Create Activity
            </button>
        </div>
        @if (Store.CurrentUser != null)
        {
            <div class="ui simple dropdown right item">
                <div class="text">
                    <img class="ui avatar image" src="assets/user.png">
                    @Store.CurrentUser.DisplayName
                </div>
                <i class="dropdown icon"></i>
                <div class="menu">
                    <div class="item">
                        <i class="ui icon user"></i>
                        My Profile
                    </div>
                    <div class="item"
                         @onclick="Logout">
                        <i class="ui icon power"></i>
                        Logout
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@code {
    void CreateActivity()
    {
        @*Dispatcher.Dispatch(new SelectActivityAction { SelectedActivity = null });
            NavManager.NavigateTo("createActivity");*@
    }

    async Task Logout()
    {
        await js.InvokeVoidAsync("state.remove", "Store");
        NavManager.NavigateTo("/", true);
    }
}