@page "/activities/{Id}"

@inherits FluxorComponent

@inject IState<ActivityState> ActivityState
@inject NavigationManager NavManager
@inject IDispatcher Dispatcher
@inject Agent Agent

@if (loading)
{
    <div class="ui segment">
        <p></p>
        <div class="ui active inverted dimmer">
            <div class="ui loader"></div>
        </div>
    </div>
}
else
{
    if (Activity != null)
    {
        <div class="ui grid">
            <div class="ten wide column">
                <ActivityDetailedHeader Activity="Activity" />
                <ActivityDetailedInfo Activity="Activity" />
                <ActivityDetailedChat />
            </div>
            <div class="six wide column">
                <ActivityDetailedSidebar />
            </div>
        </div>
    }
    else
    {
        <p>Sorry, page not found.</p>
    }
}

@code {
    [Parameter]
    public string Id { get; set; }

    Activity Activity;
    bool loading;

    protected override async Task OnInitializedAsync()
    {
        loading = true;

        if (ActivityState.Value.SelectedActivity == null)
        {
            var activity = await Agent.GetActivity(Id);
            if (activity != null)
                Activity = activity;
        }
        else
            Activity = ActivityState.Value.SelectedActivity;

        loading = false;
    }
}